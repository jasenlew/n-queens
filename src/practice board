// we have n
var n = 5;
// create an result array
var result = [];

// add n number of arrays
var arrayMaker = function(n, iteration) {

  iteration = iteration || 0;

  var newArr = [];

  var fill = function() {
    newArr.push(0);
    if (newArr.length < n) {
      fill();
    }
  };

  fill();
  result.push(newArr);

  if (iteration < n) {
    arrayMaker(n, iteration + 1);
  }

};

arrayMaker(15);

console.log(result);

// board[[]];

// n: 3
// c:
// r:
// alreadyOccupiedColumns[]
// board: []
// boards: [b1, b2]


// (1) r
// (2) c

//if c is not in alreadyOccupiedColumns
  //then place a '1' at c r
  //record [c, r] in board
  //if board.length === n
    //boards.push(board)
  //add c to alreadyOccupiedColumns
  //if r + 1 < n
    //go to (1),adding r + 1, c: 0 to the stack
  // (3)
  // pop one element off of board
  // pop one element of alreadyOccupiedColumns
  // else
    // add board to boards

// if c + 1 < n
  // go to (2) with c + 1
// else
  // return this call: go to (3)





// FUNCTION: iterating over row elements, and PAUSING at the column when no piece exists
  // put a piece in column
  // then go down one row
  // FUNCTION
